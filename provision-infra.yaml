- hosts: localhost
  ignore_errors: yes
  tasks:
  - name: create bootstrap vm
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      template: "{{ vmware_template_name }}"
      disk:
      - size_gb: "{{ hostvars[item]['disk_size'] }}"
        type: thin
        datastore: "{{ hostvars[item]['datastore'] }}"
      hardware:
        memory_mb: "{{ hostvars[item]['ram_mb'] }}"
        num_cpus: "{{ hostvars[item]['cpu'] }}"
        scsi: paravirtual
      networks:
       - name: "{{ hostvars[item]['vmware_network_name'] }}"
      wait_for_ip_address: no
    with_items:
      - "{{ groups['bootstrap'] | sort }}"

  - name: add hardware config bootstrap
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      customvalues:
      - key: "guestinfo.ignition.config.data"
        value: "{{ lookup('file', '/var/tmp/ocp4-deployconfigs/append-bootstrap.64') }}"
      - key: "guestinfo.ignition.config.data.encoding"
        value: "base64"
      - key: "disk.EnableUUID"
        value: "TRUE"
      - key: "guestinfo.ovfEnv"
        value: |
          <Environment oe:id="" xmlns="http://schemas.dmtf.org/ovf/environment/1" xmlns:oe="http://schemas.dmtf.org/ovf/environment/1" xmlns:ve="http://www.vmware.com/schema/ovfenv" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><PropertySection><Property oe:key="guestinfo.ignition.config.data" oe:value="{{ lookup('file', '/var/tmp/ocp4-deployconfigs/append-bootstrap.64') }}"/><Property oe:key="guestinfo.ignition.config.data.encoding" oe:value="base64"/></PropertySection></Environment>
    with_items:
      - "{{ groups['bootstrap'] | sort }}"


  - name: create master vms
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      template: "{{vmware_template_name}}"
      disk:
      - size_gb: "{{ hostvars[item]['disk_size'] }}"
        type: thin
        datastore: "{{ hostvars[item]['datastore'] }}"
      hardware:
        memory_mb: "{{ hostvars[item]['ram_mb'] }}"
        num_cpus: "{{ hostvars[item]['cpu'] }}"
        scsi: paravirtual
      networks:
       - name: "{{ hostvars[item]['vmware_network_name'] }}"
      wait_for_ip_address: no
    with_items:
      - "{{ groups['masters'] | sort }}"

  - name: add hardware config masters
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      customvalues:
      - key: "guestinfo.ignition.config.data"
        value: "{{ lookup('file', '/var/tmp/ocp4-deployconfigs/master.64') }}"
      - key: "guestinfo.ignition.config.data.encoding"
        value: "base64"
      - key: "disk.EnableUUID"
        value: "TRUE"
      - key: "guestinfo.ovfEnv"
        value: |
          <Environment oe:id="" xmlns="http://schemas.dmtf.org/ovf/environment/1" xmlns:oe="http://schemas.dmtf.org/ovf/environment/1" xmlns:ve="http://www.vmware.com/schema/ovfenv" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><PropertySection><Property oe:key="guestinfo.ignition.config.data" oe:value="{{ lookup('file', '/var/tmp/ocp4-deployconfigs/master.64') }}"/><Property oe:key="guestinfo.ignition.config.data.encoding" oe:value="base64"/></PropertySection></Environment>
    with_items:
        - "{{ groups['masters'] | sort }}"


  - name: create infra vms
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      template: "{{vmware_template_name}}"
      disk:
      - size_gb: "{{ hostvars[item]['disk_size'] }}"
        type: thin
        datastore: "{{ hostvars[item]['datastore'] }}"
      hardware:
        memory_mb: "{{ hostvars[item]['ram_mb'] }}"
        num_cpus: "{{ hostvars[item]['cpu'] }}"
        scsi: paravirtual
      networks:
       - name: "{{ hostvars[item]['vmware_network_name'] }}"
      wait_for_ip_address: no
    with_items:
      - "{{ groups['infra'] | sort }}"

  - name: add hardware config infra
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      customvalues:
      - key: "guestinfo.ignition.config.data"
        value: "{{ lookup('file', '/var/tmp/ocp4-deployconfigs/worker.64') }}"
      - key: "guestinfo.ignition.config.data.encoding"
        value: "base64"
      - key: "disk.EnableUUID"
        value: "TRUE"
      - key: "guestinfo.ovfEnv"
        value: |
          <Environment oe:id="" xmlns="http://schemas.dmtf.org/ovf/environment/1" xmlns:oe="http://schemas.dmtf.org/ovf/environment/1" xmlns:ve="http://www.vmware.com/schema/ovfenv" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><PropertySection><Property oe:key="guestinfo.ignition.config.data" oe:value="{{ lookup('file', '/var/tmp/ocp4-deployconfigs/worker.64') }}"/><Property oe:key="guestinfo.ignition.config.data.encoding" oe:value="base64"/></PropertySection></Environment>
    with_items:
        - "{{ groups['infra'] | sort }}"

  - name: create worker vms
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      template: "{{vmware_template_name}}"
      disk:
      - size_gb: "{{ hostvars[item]['disk_size'] }}"
        type: thin
        datastore: "{{ hostvars[item]['datastore'] }}"
      hardware:
        memory_mb: "{{ hostvars[item]['ram_mb'] }}"
        num_cpus: "{{ hostvars[item]['cpu'] }}"
        scsi: paravirtual
      networks:
       - name: "{{ hostvars[item]['vmware_network_name'] }}"
      wait_for_ip_address: no
    with_items:
      - "{{ groups['workers'] | sort }}"

  - name: add hardware config wokers
    vmware_guest:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: no
      datacenter: "{{ vmware_datacenter }}"
      cluster: "{{ vmware_cluster }}"
      folder: "{{ vm_folder }}"
      name: "{{ hostvars[item]['name'] }}"
      state: present
      customvalues:
      - key: "guestinfo.ignition.config.data"
        value: "{{ lookup('file', '/var/tmp/ocp4-deployconfigs/worker.64') }}"
      - key: "guestinfo.ignition.config.data.encoding"
        value: "base64"
      - key: "disk.EnableUUID"
        value: "TRUE"
      - key: "guestinfo.ovfEnv"
        value: |
          <Environment oe:id="" xmlns="http://schemas.dmtf.org/ovf/environment/1" xmlns:oe="http://schemas.dmtf.org/ovf/environment/1" xmlns:ve="http://www.vmware.com/schema/ovfenv" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><PropertySection><Property oe:key="guestinfo.ignition.config.data" oe:value="{{ lookup('file', '/var/tmp/ocp4-deployconfigs/worker.64') }}"/><Property oe:key="guestinfo.ignition.config.data.encoding" oe:value="base64"/></PropertySection></Environment>
    with_items:
        - "{{ groups['workers'] | sort }}"


  # - name: set bootstrap address masters
  #   vmware_guest:
  #     hostname: "{{ vcenter_hostname }}"
  #     username: "{{ vcenter_username }}"
  #     password: "{{ vcenter_password }}"
  #     validate_certs: no
  #     datacenter: "{{ vmware_datacenter }}"
  #     cluster: "{{ vmware_cluster }}"
  #     folder: "{{ vm_folder }}"
  #     name: "{{ hostvars[item]['name'] }}"
  #     networks:
  #      - name: "{{ hostvars[item]['vmware_network_name'] }}"
  #        mac: "{{hostvars[item]['mac']}}"
  #        start_connected: yes
  #   with_items:
  #       - "{{ groups['bootstrap'] | sort }}"


  # - name: set mac address masters
  #   vmware_guest:
  #     hostname: "{{ vcenter_hostname }}"
  #     username: "{{ vcenter_username }}"
  #     password: "{{ vcenter_password }}"
  #     validate_certs: no
  #     datacenter: "{{ vmware_datacenter }}"
  #     cluster: "{{ vmware_cluster }}"
  #     folder: "{{ vm_folder }}"
  #     name: "{{ hostvars[item]['name'] }}"
  #     networks:
  #      - name: "{{ hostvars[item]['vmware_network_name'] }}"
  #        mac: "{{hostvars[item]['mac']}}"
  #        start_connected: yes
  #   with_items:
  #       - "{{ groups['masters'] | sort }}"

  # - name: set workers address masters
  #   vmware_guest:
  #     hostname: "{{ vcenter_hostname }}"
  #     username: "{{ vcenter_username }}"
  #     password: "{{ vcenter_password }}"
  #     validate_certs: no
  #     datacenter: "{{ vmware_datacenter }}"
  #     cluster: "{{ vmware_cluster }}"
  #     folder: "{{ vm_folder }}"
  #     name: "{{ hostvars[item]['name'] }}"
  #     networks:
  #      - name: "{{ hostvars[item]['vmware_network_name'] }}"
  #        mac: "{{hostvars[item]['mac']}}"
  #        start_connected: yes
  #   with_items:
  #       - "{{ groups['workers'] | sort }}"



  # - name: set bootstrap mac address
  #   vmware_guest:
  #     hostname: "{{ vcenter_hostname }}"
  #     username: "{{ vcenter_username }}"
  #     password: "{{ vcenter_password }}"
  #     validate_certs: no
  #     datacenter: "{{ vmware_datacenter }}"
  #     cluster: "{{ vmware_cluster }}"
  #     folder: "{{ vm_folder }}"
  #     name: "{{ hostvars[item]['name'] }}"
  #     networks:
  #      - name: "{{ hostvars[item]['vmware_network_name'] }}"
  #        mac: "{{hostvars[item]['mac']}}"
  #        start_connected: yes
  #   with_items:
  #       - "{{ groups['bootstrap'] | sort }}"